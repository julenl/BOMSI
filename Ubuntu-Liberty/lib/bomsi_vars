#! /bin/bash
export BOMSI_VARS_RELEASE="Liberty"
export BOMSI_VARS_VERSION="0.1"
##
## This file contains the variables used by BOMSI
## and some basic functions
##
##
bomsi_vars_version () {
echo "bomsi_vars version: $BOMSI_VARS_RELEASE $BOMSI_VARS_VERSION"
}
load_bomsi_functions() {
if [[ ! "$PATH" == *"/root/bomsi/lib/"* ]]; then # and not already in $PATH
  export PATH=$PATH:/root/bomsi/lib
  #echo "Added /root/bomsi/lib to the PATH"
fi
for file in `ls /root/bomsi/lib/* |grep -v "susti" |grep -v "ini_comparer.py"`
  do 
    . $file
  done
}
log_step (){
  ## Usage: log_step 'Installing keystone'
  ## Write timestamp and sentence to /tmp/BOMSI_STEP.log
  DATE=`date +%Y-%m-%d:%H:%M:%S`
  echo $DATE " " $1 |tee -a /tmp/BOMSI_STEP.log
} 
sustivar () {
# Substitute the value of a variable in this file
# Usage: sustivar "ROOT_PASSWORD=MyPassword"
VAR=$(echo $1 |awk -F= '{print $1}')
sed -i "s/export[ ]$VAR[ =].*/export $1/" $THISD/bomsi_vars
eval export $1
}
### VARIABLES
export USE_VMS="KVM"  #"KVM" for virsh and "NO" in case the machines are already up
#export VM_TEMPLATE_NAME="MiniCentOS7p"
#export VM_PREF="OS-t2"
## Network Interfaces (VLANS like eth0.1 or eth0:2 also supported)
export IFACE0=eth0
#export IFACE1=eth1
#export IFACE2=eth2
export IFACE_EXT=eth1
## IP prefixes for Admin, external, Tunnel and Storage networks
export IPPR_A=10.0.0.
export IPPR_EXT=203.0.113.
#export IPPR_T=10.0.1.
#export IPPR_S=10.0.2.
export NETMASK="255.255.255.0"
export GATEWAY_LN=1
export GATEWAY=${IPPR_A}${GATEWAY_LN}
export DNS_LN=1
export NAMESERVER=${IPPR_A}${DNS_LN}
## Last Digits of IPs of servers
export IPLD_controller=12
export IPLD_compute1=31
export IPLD_compute2=32
export IPLD_compute3=33
## IPs of the servers
export IP_controller=${IPPR_A}${IPLD_controller}
export IP_compute1=${IPPR_A}${IPLD_compute1}
export IP_compute2=${IPPR_A}${IPLD_compute2}
export IP_compute3=${IPPR_A}${IPLD_compute3}
## Old IP stuff
#export GATEWAY1=$IPPR_T"1"
#export GATEWAY2=$IPPR_S"1"
#IP of the pre-installed CentOS VM template
#export INITIAL_IP=$IPPR_A"254"
#export CONT_LN=${IP_controller}
export CONTROLLER_IP=${IP_controller}
## all controllers are running from the controller
## This variables are just for generating the /etc/hosts file
#export KEYSTONE_IP=${CONTROLLER_IP}
#export GLANCE_IP=${CONTROLLER_IP}
#export HORIZON_IP=${CONTROLLER_IP}
#export CINDER_IP=${CONTROLLER_IP}
#export NOVA_IP=${CONTROLLER_IP}
#export COMPUTE_LN=31
#export COMPUTE1_IP=$IPPR_A$COMPUTE_LN
#export COMPUTE_IPS=$IPPR_A$COMPUTE_LN
#export COMPUTE_TUNIPS=$IPPR_T$COMPUTE_LN
#export COMPUTE_STOIPS=$IPPR_S$COMPUTE_LN
export NEUTRON_LN=21
export NEUTRON_NODE_IP=$IPPR_A$NEUTRON_LN
export NEUTRON_NODE_TUNIP=$IPPR_T$NEUTRON_LN #Tunnel network
export CINDER_LN=41
#export BLOCK_IPS=$IPPR_A$CINDER_LN
#export BLOCK_STOIPS=$IPPR_S$CINDER_LN #Storage Network
#export SWIFT_C_IP=${CONTROLLER_IP}
#export SWIFT_N_LN=51
#export SWIFT_N_IP=$IPPR_A$SWIFT_N_LN
#export OBJECT_IP=$IPPR_A$SWIFT_N_LN
#export HEAT_IP=${CONTROLLER_IP}
### PASSWORDS
export ROOT_PASSWORD=1234
export NEW_ROOT_PASSWORD="1234"
export MYSQL_ROOT="Password"
export RABBIT_USER="admin"
export RABBIT_PASS=${MYSQL_ROOT}
export KEYSTONE_DB_PASSWORD=${MYSQL_ROOT}
export KEYSTONE_ADMIN_PASSWORD=${MYSQL_ROOT}
export KEYSTONE_DEMO_PASSWORD=${MYSQL_ROOT}
export KEYSTONE_REGION="RegionOne"
export KEYSTONE_AUTH_TOKEN=${MYSQL_ROOT}
export GLANCE_DB_PASSWORD=${MYSQL_ROOT}
export GLANCE_PASSWORD=${MYSQL_ROOT}
export NOVA_DB_PASSWORD=${MYSQL_ROOT}
export NOVA_PASSWORD=${MYSQL_ROOT}
export NEUTRON_DB_PASSWORD=${MYSQL_ROOT}
export NEUTRON_PASSWORD=${MYSQL_ROOT}
export METADATA_SECRET="METADATA_SECRET"
export CINDER_DB_PASSWORD=${MYSQL_ROOT}
export CINDER_PASSWORD=${MYSQL_ROOT}
export SWIFT_PASSWORD=${MYSQL_ROOT}
export HEAT_PASSWORD=${MYSQL_ROOT}
export HEAT_DB_PASSWORD=${MYSQL_ROOT}
export HEAT_DOMAIN_PASS=${MYSQL_ROOT}
export CEILOMETER_PASSWORD=${MYSQL_ROOT}
export CEILOMETER_DB_PASSWORD=${MYSQL_ROOT}
export TROVE_PASSWORD=${MYSQL_ROOT}
export TROVE_DB_PASSWORD=${MYSQL_ROOT}
#GUI variables
export USB_DISK_DEV=sdb
export HD=vda
export VCPUS=2
export VRAM=4092
export VIRT_NIC_MAN='network=management'
export OUT_ISO_NAME_GUI=BOMSI-controller.iso
export INSTALL_TYPE=2_nodes
## ssh aliases for the machines
controller () { ssh-keygen -f "$HOME/.ssh/known_hosts" -R $IP_controller; sshpass -p $ROOT_PASSWORD ssh -o "StrictHostKeyChecking no" root@$IP_controller; }
network    () { ssh-keygen -f "$HOME/.ssh/known_hosts" -R $NEUTRON_NODE_IP; sshpass -p $ROOT_PASSWORD ssh -o "StrictHostKeyChecking no" root@$NEUTRON_NODE_IP; }
compute1   () { ssh-keygen -f "$HOME/.ssh/known_hosts" -R $IP_compute1; sshpass -p $ROOT_PASSWORD ssh -o "StrictHostKeyChecking no" root@$IP_compute1; }
compute2   () { ssh-keygen -f "$HOME/.ssh/known_hosts" -R $IP_compute2; sshpass -p $ROOT_PASSWORD ssh -o "StrictHostKeyChecking no" root@$IP_compute2; }
compute3   () { ssh-keygen -f "$HOME/.ssh/known_hosts" -R $IP_compute3; sshpass -p $ROOT_PASSWORD ssh -o "StrictHostKeyChecking no" root@$IP_compute3; }
block      () { ssh-keygen -f "$HOME/.ssh/known_hosts" -R $BLOCK_IPS; sshpass -p $ROOT_PASSWORD ssh -o "StrictHostKeyChecking no" root@$BLOCK_IPS; }
block      () { ssh-keygen -f "$HOME/.ssh/known_hosts" -R $OBJECT_IP; sshpass -p $ROOT_PASSWORD ssh -o "StrictHostKeyChecking no" root@$OBJECT_IP; }
