#! /usr/bin/env bash

## This file tries to guess whether we are running on a Suse, CentOS or Debian/Ubuntu
## based machine (mostly tested with Ubuntu). If some dependency is missing, it will
## update the package database and install the missing package(s)

if [ -z $INSTALL_VM ];then
    DEPENDENCIES+="qemu-kvm libvirt-bin bridge-utils acpid virtinst qemu-system virt-manager "
fi

# I'm gonna drop everything I had on cross-platform and focus on Ubuntu
# in order to make the code more simple

pkg_installed () { dpkg -l $1 |grep "ii"; }
KVM_GROUPS="libvirtd kvm"

INST_PKGS="" # Not installed packages


## Make sure all the packages are installed
for DEP in $DEPENDENCIES
  do
    if ! pkg_installed $DEP &> /dev/null; then
      INST_PKGS+=" $DEP"
    else
      eval echo "   $DEP is already installed" $SILENCER
    fi
  done


# Install all dependencies at once

if [[ ! -z "${INST_PKGS// }" ]]; then
   echo "We need some dependencies to be installed in order to BOMSI to work"
   if [[ "$INST_PKGS" == *"virt-manager"* ]]; then
       echo "WARNING: you might need to restart in order to make virt-manager work properly" 
   fi
 
   echo "Would you like to give the sudo passwor to run the following command?"
   echo "  sudo apt-get -y install $INST_PKGS"
   read -p "Answer Y or N"  -n 1 -r REPLY
   if [[ $REPLY =~ ^[Yy]$ ]]; then
         echo ">>>> Installing $INST_PKGS"
         check_root
         eval sudo apt-get -y install $INST_PKGS &> /tmp/bomsi_install.log $SILENCER
   fi
fi



# If we are installing virt-manager we have to configure it too
if [[ "$INST_PKGS" == *"virt-manager"* ]]; then
  ## Make sure that the current user can use virsh properly

  ## Usage: add_user_to_group USER GROUP
  add_user_to_group () { getent group $2 |grep $1 > /dev/null || \
  echo "We need sudo to add user to KVM group" && eval sudo usermod -a -G $2 $1 $SILENCER; }
 
  for GROUP_I in $KVM_GROUPS; do 
    add_user_to_group $USER $GROUP_I
    add_user_to_group root  $GROUP_I
  done

  ## Make sure the user has permission to create VMs
  touch /var/lib/libvirt/images/bomsi_test_file &> /dev/null
  [ "$?" != "0" ] && \
  echo "WARNING: You don't have permission to write to /var/lib/libvirt/images with your current user $USER. Enter root password to change permissions on that folder." && \
  echo "We don't have write permissions in /var/lib/libvirt/images/ as user $USER, chmod 777 in that directory"
  eval sudo chmod 777 /var/lib/libvirt/images/ $SILENCER
  eval rm /var/lib/libvirt/images/bomsi_test_file $SILENCER

  printf "\033[0;33mWARNING: The virt-manager GUI might not work properly until you log again into the system. i.e.: open another terminal.\033[0m\n"
  echo "As a workaround we'll exectute 'su - $USER' and try the bomsi command again"
    
  ## for some reason this directory has sometimes wrong permissions
  [ -d "~/.cache/virt-manager" ] && touch ~/.cache/virt-manager/virt-install.log || \
  echo "We need sudo to change permissions in ~/.cache/virt-manager/" && \
  eval sudo chown -R $USER ~/.cache/virt-manager/ $SILENCER
  echo ">> Starting the virt-manager GUI"
  echo "This is the first time we run virt-manager, so we'll run it with 'sudo su $USER' to make it work"
  eval sudo su $USER -c virt-manager $SILENCER
 
fi



